    # Setting haltech mesh as scriptable display
[SCRIPTABLE_DISPLAY_...]
MESHES = Haltech_Screen
SCRIPT = haltechIC7.lua

    # Digital shader for haltech screen
[SHADER_REPLACEMENT_...]
MATERIALS = Haltech_Screen
SHADER = smDigitalScreen
PROP_... = smScreenScale, 800,480
PROP_... = smScreenType, 2
PROP_... = smUseTextureCoordinates, 1

    # Digital shader for haltech turn signals
[SHADER_REPLACEMENT_...]
MATERIALS = haltechTurn
SHADER = smDigitalScreen
PROP_... = smScreenScale, 800,480
PROP_... = smScreenType, 2
PROP_... = smUseTextureCoordinates, 1

    # Setting battery voltage to 14v
[STATUS_BATTERY]
BASE_VOLTAGE = 14.0                         ; base battery voltage
MAX_VOLTAGE = 14.7                          ; maximum battery voltage

[EXTRA_FX]
MASK_GBUFFER = Haltech_Glass_LED, headlight_glass

    # Makes haltech screen and buttons emit light on interior
[EXTRA_FX_EMISSIVE_...]
MESHES = Haltech_Screen, Haltech_Emissive_Buttons   ; list of meshes
RANGE = 0.3
COLOR = 1                                           ; optional brightness multiplier (could be an RGBA value)

    # Makes haltech LEDs and buttons emit light on interior
[EXTRA_FX_EMISSIVE_...]
MATERIALS = Haltech_LED                     ; list of materials
RANGE = 0.2
COLOR = 0.1                                 ; optional brightness multiplier (could be an RGBA value)

    # Screen emissive
[EMISSIVE_...]
INPUT = HEADLIGHTS
NAME = Haltech_Screen
COLOR = 1, 1, 1                             ; glowing color if condition is met
OFF_COLOR = 3, 3, 3                         ; glowing color otherwise, default value is 0
LAG = 0.0                                   ; with zero, turns on and off immediately
SIMULATE_HEATING = 0.0                      ; adds heating effect, going through orange tint while turning on and off
LOCATION = NONE                             ; light location used for damage and light guessing, default value depends on type
ACT_AS_HEADLIGHTS = 0                       ; if set to 1, emissiveness is raised when camera is caught in car’s headlights
CAST_LIGHT = 0

    # Push button emissive
[EMISSIVE_...]
INPUT = HEADLIGHTS
NAME = Haltech_Emissive_Buttons
COLOR = 1, 1, 1                             ; glowing color if condition is met
OFF_COLOR = 3, 3, 3                         ; glowing color otherwise, default value is 0
LAG = 0.0                                   ; with zero, turns on and off immediately
SIMULATE_HEATING = 0.0                      ; adds heating effect, going through orange tint while turning on and off
LOCATION = NONE                             ; light location used for damage and light guessing, default value depends on type
ACT_AS_HEADLIGHTS = 0                       ; if set to 1, emissiveness is raised when camera is caught in car’s headlights
CAST_LIGHT = 0

    # Left turn signal emissive
[EMISSIVE_TURNSIGNAL_LEFT_...]
NAME = Haltech_Turn_Left
COLOR = 0,1,0, 7                            ; glowing color if condition is met
LAG = 0.0                                   ; with zero, turns on and off immediately
SIMULATE_HEATING = 0.0                      ; adds heating effect, going through orange tint while turning on and off
LOCATION = NONE                             ; light location used for damage and light guessing, default value depends on type
ACT_AS_HEADLIGHTS = 0                       ; if set to 1, emissiveness is raised when camera is caught in car’s headlights
CAST_LIGHT = 0

    # Right turn signal emissive
[EMISSIVE_TURNSIGNAL_RIGHT_...]
NAME = Haltech_Turn_Right
COLOR = 0,1,0, 7                            ; glowing color if condition is met
LAG = 0.0                                   ; with zero, turns on and off immediately
SIMULATE_HEATING = 0.0                      ; adds heating effect, going through orange tint while turning on and off
LOCATION = NONE                             ; light location used for damage and light guessing, default value depends on type
ACT_AS_HEADLIGHTS = 0                       ; if set to 1, emissiveness is raised when camera is caught in car’s headlights
CAST_LIGHT = 0
